/**
* Primary Configuration colors
*/

// $primary-bg: rgb(255, 255, 255);
$primary-bg: rgb(40, 40, 40);
$primary-bg-d: rgb(40, 40, 40);

// $primary-text: rgb(30, 30, 30);
$primary-text: rgb(240, 240, 240);
$primary-text-d: rgb(240, 240, 240);

// $textbox-bg: rgb(235, 235, 235);
$textbox-bg: rgb(70, 70, 70);
$textbox-bg-d: rgb(70, 70, 70);

/**
* Dropdown colors:
* - accent must be different from primary bg
* - bg can (not must) be primary bg
*/

// $dropdown-bg: $primary-bg;
$dropdown-bg: $primary-bg-d;
$dropdown-bg-d: $primary-bg-d;

// $dropdown-accent: rgb(225, 225, 225);
$dropdown-accent: rgb(70, 70, 70);
$dropdown-accent-d: rgb(70, 70, 70);

/**
* Control button colors:
* - do not require changes on color scheme
*/
$button-green: rgb(57, 133, 14);
$button-blue: rgb(5, 93, 151);
$button-gray: rgb(120, 120, 120);

/**
* IO Colors
*/
$io-segementOff: rgb(71, 0, 0);
$io-segementOff-d: rgb(71, 0, 0);

/**
* Border Radii
*/
$border-radius-major: 5px;
$border-radius-minor: 2.5px;

/**
* Remove and special settings on box model for any elements.
*/
* {
	margin: 0;
	padding: 0;
	box-sizing: border-box;
}

/**
* Prepare fullscreen application (no scroll by default, only if nessecary)
*/
body {
	width: 100%;
	height: 100vh;

	background-color: $primary-bg;
	color: $primary-text;

	@media (prefers-color-scheme: dark) {
		background-color: $primary-bg-d;
		color: $primary-text-d;
	}
}

/**
* Main content wrapper
*/
.content-box {
	width: 100%;
	height: 100%;

	/**
	* Build mini header.
	*/
	.header-box {
		padding: 15px 0 10px 25px;
		font-size: 25px;
		font-weight: 600;
	}

	/**
	* Use flexbox to generated dynamic row placement.
	*/
	.body-box {
		position: relative;
		display: flex;

		/**
		* Input box requirements:
		* - contains editor and controll buttons
		* - uses 50% of the space
		* - should use max space avilable
		*/
		.input-box {
			display: block;
			width: 50%;
			height: calc(100vh - 75px);

			/**
			* CodeMirror Editor requirements:
			* - uses margins to not touch border
			* - no overflow
			*/
			.editor-box {
				position: relative;
				width: calc(100% - 35px);

				margin-left: 25px;
				margin-right: 10px;
				margin-top: 10px;

				border-radius: $border-radius-major;
				overflow: hidden;

				#closeLibaryView {
					outline: none;
					border: none;
					cursor: pointer;

					position: absolute;
					top: 5px;
					right: 5px;
					z-index: 10;

					background-color: rgba(1, 1, 1, 0);

					i {
						width: 20px;
						height: 20px;
						color: white;

						&:hover {
							color: #ddd;
						}
					}
				}
			}

			/**
			* Button Box requirements:
			* - margin-left = editor.margin-left
			* - contains buttons (row)
			*/
			.button-box {
				margin-top: 25px;
				margin-left: 25px;

				/**
				* Button requirement:
				* - contains font-aweasome icon (on text / outline)
				* - bg-change on hover
				*/
				button {
					outline: none;
					border: none;
					margin: 0;
					padding: 0;
					height: 40px;
					width: 40px;
					font-size: 20px;
					color: $primary-text-d;
					border-radius: $border-radius-major;
					transition: .2s;
					cursor: pointer;
					font-weight: bold;
				}

				#compile,
				#pause {
					background-color: $button-blue;

					&:hover {
						background-color: rgba($button-blue, 0.5);
					}

					&:disabled {
						background-color: rgba($button-blue, 0.5);
					}
				}

				#run,
				#step {
					background-color: $button-green;

					&:hover {
						background-color: rgba($button-green, 0.5);
					}

					&:disabled {
						background-color: rgba($button-green, 0.5);
					}
				}

				/**
				* Upload and Download must encapuslate input objects:
				* - same requirements as buttom
				* - must use max space input detetction
				*/
				.upload-btn-box,
				.download-btn-box {
					font-size: 20px;
					border-radius: $border-radius-major;
					transition: .2s;

					height: 40px;
					width: 40px;

					margin: 0;
					padding: 0;
					position: relative;
					overflow: hidden;
					display: inline;
					cursor: pointer;

					.btn {
						cursor: pointer;
						height: 40px;
						width: 40px;
						margin: 0;
						border: none;
						color: $primary-text-d;
						background-color: $button-gray;
						border-radius: $border-radius-major;
						font-size: 20px;
						font-weight: bold;
						transition: .2s;

						&:disabled {
							background-color: rgba($button-gray, 0.5);
						}
					}

					&:hover {
						.btn {
							background-color: rgba($button-gray, 0.5);
						}
					}

					input[type="file"] {
						cursor: pointer;
						font-size: 100px;
						position: absolute;
						height: 40px;
						width: 40px;
						left: 0;
						opacity: 0;

						&::-webkit-file-upload-button {
							display: none;
						}
					}
				}
			}

			/**
			* Debug box requirements:
			* - no visible outline (only container)
			* - color highlighting of message types
			*/
			.debug-box {
				width: 80%;
				margin-left: 25px;
				padding-top: 25px;

				article {
					display: block;
					margin: 0;
					padding: 2.5px;
					font-size: 14px;
					opacity: 0.5;
				}

				.error {
					color: red;
				}
			}
		}

		/**
		* Info box requirements:
		* - contains all info elements (in dropdowns)
		* - uses remainng space
		* - controlls dropdowns
		*/
		.info-box {
			width: 50%;
			height: calc(100% - 75px);

			/**
			* Settings requirements:
			* - controlls form-groups 
			*/
			.settings {
				.form-group {
					position: relative;

					label {
						width: 160px;
						text-align: right;
						display: inline-block;
						padding: 5px 10px;
					}

					input {
						display: inline-block;
						margin-left: 10px;
					}

					span {
						font-size: 10pt;
						padding-left: 10px;
						opacity: 0.75;
					}
				}
			}

			/**
			* Libary controller requirements:
			* - controlls ul of libaries (with buttons)
			* - save button
			*/
			.libary-controller {
				.libary-list {
					list-style: square;
					list-style-type: square;
					padding-left: 10px;

					.showButton,
					.libaryOptionButton {
						margin-right: 10px;
						padding: .5px 5px;
						border-radius: $border-radius-major;
						outline: none;
						border: none;
						color: $primary-text;
						background-color: $textbox-bg;

						@media (prefers-color-scheme: dark) {
							color: $primary-text-d;
							background-color: $textbox-bg-d;
						}
					}
				}

				.saveLibary {
					margin-left: 10px;
					margin-top: 10px;
					padding: 5px 10px;
					border-radius: $border-radius-major;
					outline: none;
					border: none;
					color: $primary-text;
					background-color: $textbox-bg;

					@media (prefers-color-scheme: dark) {
						color: $primary-text-d;
						background-color: $textbox-bg-d;
					}
				}
			}

			/**
			* Controlls registers and flags:
			* - internal flexbox rows
			* - JS Generated size alignment
			*/
			.registersAndFlags {
				display: flex;
				position: relative;

				.registers-box {
					// width: 60%;
					.register {
						display: flex;
						padding-bottom: 10px;

						.label {
							width: 100px;
							text-align: center;
						}

						.byte {
							outline: none;
							border: none;
							border-radius: $border-radius-minor;
							padding: 2.5px 5px;
							width: 40px;
							margin: 0 2.5px;
							text-align: center;

							font-size: 15px;

							color: $primary-text;
							background-color: $textbox-bg;
							@media (prefers-color-scheme: dark) {
								color: $primary-text-d;
								background-color: $textbox-bg-d;
							}
						}
					}
				}

				.flags-box {
					padding-left: 20px;
					.flag {
						display: flex;
						padding-bottom: 10px;

						.label {
							width: 50px;
							text-align: center;
						}

						.checkbox {
							outline: none;
							border: none;
							border-radius: $border-radius-minor;
							padding: 2.5px 2.5px;
							width: 23px;
							height: 23px;
							margin: 0 2.5px;

							color: $primary-text;
							background-color: $textbox-bg;
							@media (prefers-color-scheme: dark) {
								color: $primary-text-d;
								background-color: $textbox-bg-d;
							}
						}
					}
				}
			}

			/**
			* Memory requirements:
			* - dynamic cell size / amount changes
			* - static control elements
			*/
			.memory-box {
				margin: 0;

				.memory-control {
					label {
						display: inline-block;
						padding: 5px 10px;
						width: 160px;
						text-align: right;
					}

					.memAddr,
					.memSize {
						outline: none;
						border: none;
						padding: 2.5px 5px;
						text-align: center;
						margin: 2.5px;
						font-size: 15px;

						width: 160px;

						color: $primary-text;
						background-color: $textbox-bg;
						@media (prefers-color-scheme: dark) {
							color: $primary-text-d;
							background-color: $textbox-bg-d;
						}
					}

					.memAsInt {
						outline: none;
						border: none;
						border-radius: $border-radius-minor;
						// padding: 2.5px 2.5px;
						width: 23px;
						height: 23px;
						margin: 0 2.5px;

						color: $primary-text;
						background-color: $textbox-bg;
						@media (prefers-color-scheme: dark) {
							color: $primary-text-d;
							background-color: $textbox-bg-d;
						}
					}
				}

				.memory-content {
					padding-top: 10px;
					position: relative;

					.row {
						input[type="text"] {
							outline: none;
							border: none;
							padding: .5% .25%;
							text-align: center;
							margin: .5%;
							font-size: 15px;
							border-radius: $border-radius-minor;

							color: $primary-text;
							background-color: $textbox-bg;
							@media (prefers-color-scheme: dark) {
								color: $primary-text-d;
								background-color: $textbox-bg-d;
							}
						}

						.mem8 {
							width: 7%;
							border-radius: $border-radius-minor;
						}

						.mem16 {
							width: 15%;
							border-radius: $border-radius-minor;
						}

						.mem32 {
							width: 30%;
							border-radius: $border-radius-minor;
						}
					}
				}
			}

			/**
			* IO requirements:
			* - modularized DOM
			* - responsive on IN/OUT
			*/
			.io {
				.led-list {
					display: flex;

					.led {
						margin: 2.5px;
						width: 25px;
						height: 25px;
						border-radius: $border-radius-major;

						background-color: gray;
					}
				}

				.leverRow {
					display: flex;
				}

				.sevenSegmentDisplay {
					padding: 5px;

					.sevenSegDigit {
						height: 40px;
						padding-right: 5px;

						use {
							fill: $io-segementOff;
							@media (prefers-color-scheme: dark) {
								fill: $io-segementOff-d;
							}
						}

						.sevenSeg-segOn {
							fill: red;
						}
					}
				}

				.matrixKeyboard {
					.matrixKeyboardRow {
						display: flex;
					}
				}

				.pit {
					padding: 5px;
				}
			}
		}
	}
}

/**
* Dropdown component requires:
* - no overflow
* - rounded borders + margin
*/
.dropdown {
	margin: 10px;
	overflow: hidden;

	/**
	* Header component requires:
	* - cursor:pointer
	* - visible color difference to bg
	*/
	.dropdown-header {
		cursor: pointer;
		user-select: none;

		* {
			user-select: none;
		}

		padding: 2.5px;
		padding-left: 10px;
		background-color: $dropdown-accent;
		border-radius: $border-radius-minor;

		@media (prefers-color-scheme: dark) {
			background-color: $dropdown-accent-d;
		}
	}

	/**
	* Body component requires:
	* - variable bg
	* - no overflow and transition
	*/
	.dropdown-body {
		position: relative;
		padding-top: 15px;
		padding-bottom: 5px;

		overflow: hidden;
		transition: .3s;
		background-color: $dropdown-bg;

		@media (prefers-color-scheme: dark) {
			background-color: $dropdown-bg-d;
		}
	}
}

/**
* Custom Cheboxes
* General Definition
*/
.checkboxContainer {
	display: block;
	position: relative;
	margin-bottom: 12px;
	cursor: pointer;
	font-size: 22px;
	user-select: none;

	width: 25px;
	height: 25px;
	margin: 2.5px;

	input {
		position: absolute;
		opacity: 0;
		cursor: pointer;
		height: 0;
		width: 0;
	}

	&:hover input ~ .checkmark {
		background-color: #ccc;
	}

	input:checked ~ .checkmark {
		background-color: #2196f3;

		&::after {
			display: block;
		}
	}

	.checkmark {
		position: absolute;
		top: 0;
		left: 0;
		height: 25px;
		width: 25px;
		background-color: #eee;

		&::after {
			content: "";
			position: absolute;
			display: none;
		}

		&::after {
			left: 9px;
			top: 5px;
			width: 5px;
			height: 10px;
			border: solid white;
			border-width: 0 3px 3px 0;
			-webkit-transform: rotate(45deg);
			-ms-transform: rotate(45deg);
			transform: rotate(45deg);
		}
	}
}

/**
* Flex Row
*/
.flex-row {
	display: flex;

	> * {
		margin: 6px 6px 0 6px;
	}
}

/**
* Footer
*/
footer {
	position: fixed;
	bottom: 0;
	left: 0;
	width: 100%;
	text-align: center;

	background: linear-gradient(to top, rgba($primary-bg, 1) 0%, rgba($primary-bg, 0) 100%);
	color: rgba($primary-text, 0.25);

	a {
		color: rgba($primary-text, 0.25);
	}

	@media (prefers-color-scheme: dark) {
		background: linear-gradient(to top, rgba($primary-bg-d, 1) 0%, rgba($primary-bg-d, 0) 100%);
	}
}

/**
* NoScript
*/
noscript {
	position: fixed;
	width: 100vw;
	height: 100vh;
	background-color: $primary-bg;
	color: $primary-text;
	text-align: center;
}
